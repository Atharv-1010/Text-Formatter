{"version":3,"sources":["Components/Navbar.js","Components/TextForms.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","togglemode","htmlFor","TextForms","useState","text","setText","heading","rows","value","onChange","event","target","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","msg","App","setmode","setAlert","message","setTimeout","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2fb6cde5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">About</a>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForms(props) {\r\n    const handleUpclick = () => {\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Converted to Upper case\", \"Success\")\r\n    }\r\n    const handlelowclick = () => {\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Converted to Lower case\", \"Success\")\r\n    }\r\n    const handlenotext = () => {\r\n        let newtext = '';\r\n        setText(newtext)\r\n        props.showAlert(\"Cleared the text\", \"Success\")\r\n    }\r\n    const handlecopytext = () => {\r\n        var text = document.getElementById('mybox')\r\n        text.select();\r\n        // text.setSelectionrange(0, 9999999999);\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Copied the text to Clipboard\", \"Success\")\r\n    }\r\n    const handleonchange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n        <div>\r\n            <h1 className=\"my-3\">{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"mybox\" rows=\"10\" value={text} onChange={handleonchange}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-success mx-3\" onClick={handleUpclick}>Convert to Upper case</button>\r\n            <button className=\"btn btn-primary my-3\" onClick={handlelowclick}>Convert to Lower case</button>\r\n            <button className=\"btn btn-danger mx-3\" onClick={handlenotext}>Clear text</button>\r\n            <button className=\"btn btn-warning my-3\" onClick={handlecopytext}>Copy text</button>\r\n        </div>\r\n        <div className=\"container my-2\">\r\n            <h1>Your Text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>It would take {0.008 * text.split(\" \").length} minutes to read</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\"\n// import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport Textforms from \"./Components/TextForms\";\nimport React, { useState } from 'react'\nimport Alert from \"./Components/Alert\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1111);\n  }\n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark')\n      document.body.style.backgroundColor = 'gray';\n      showAlert(\"Dark mode has been enabled successfully\", \"Success\")\n    }\n    else {\n      setmode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Dark mode has been disabled successfully\", \"Success\")\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"AB_Formatter\" mode={mode} togglemode={togglemode} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <Textforms showAlert={showAlert} heading=\"Enter the text\" mode={mode} />\n        {/* <About head=\"About Us\" /> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}